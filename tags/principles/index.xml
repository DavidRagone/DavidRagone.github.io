<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Principles on David Ragone</title>
    <link>https://davidragone.com/tags/principles/</link>
    <description>Recent content in Principles on David Ragone</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Jul 2017 18:31:09 -0700</lastBuildDate>
    
	<atom:link href="https://davidragone.com/tags/principles/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why You Should Write Comments In Your Code</title>
      <link>https://davidragone.com/blog/why-you-should-write-comments-in-your-code/</link>
      <pubDate>Wed, 05 Jul 2017 18:31:09 -0700</pubDate>
      
      <guid>https://davidragone.com/blog/why-you-should-write-comments-in-your-code/</guid>
      <description>Why you should write comments in your code Aka, self-documenting code and other programming myths. Especially in the ruby community, there&amp;rsquo;s a strong animosity to commenting or documenting code. The usual retort is something to the effect of &amp;ldquo;comments are future lies&amp;rdquo;, referencing how they can easily become an incorrect representation of what the code does.
In my experience, this both ignores an important aspect of the job, and misstates the purpose of comments.</description>
    </item>
    
  </channel>
</rss>